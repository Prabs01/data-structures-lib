cmake_minimum_required(VERSION 3.20)
project(DataStructuresLibrary LANGUAGES CXX)

# ─────────────────────────────────────────────
# C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# ─────────────────────────────────────────────
# Bring SFML with FetchContent
include(FetchContent)
FetchContent_Declare(
  sfml
  GIT_REPOSITORY https://github.com/SFML/SFML.git
  GIT_TAG        3.0.0
)
FetchContent_MakeAvailable(sfml)   # creates imported targets SFML::Graphics etc.

# ─────────────────────────────────────────────
# Library: ds  (everything in src/)
file(GLOB_RECURSE DS_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
add_library(ds STATIC ${DS_SOURCES})
target_include_directories(ds PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

# ─────────────────────────────────────────────
# Helper function to collect .cpp → executable
function(add_auto_exec target_glob)
    file(GLOB files "${CMAKE_CURRENT_SOURCE_DIR}/${target_glob}")
    foreach(f ${files})
        get_filename_component(name ${f} NAME_WE)
        add_executable(${name} ${f})
        target_link_libraries(${name}
            PRIVATE ds                     # your data-structures library
                    SFML::Graphics
                    SFML::Window
                    SFML::System
                    SFML::Audio            # ← added audio module
        )
    endforeach()
endfunction()

# ─────────────────────────────────────────────
# Apps (visual demos that use SFML)
add_auto_exec("apps/*.cpp")

# Unit tests
add_auto_exec("tests/*.cpp")

# Solved-problem executables
add_auto_exec("solved-problems/*.cpp")
